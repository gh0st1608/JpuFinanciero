USE [BDFinanciero]
GO
/****** Object:  StoredProcedure [dbo].[EliminarTipoCliente]    Script Date: 22/09/2020 20:33:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[EliminarTipoCliente](
	@IdTipoCliente						int,
	@UsuarioModificacionId				int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;
	begin
		begin tran
			begin
				  
				  update TipoCliente 
					set					
						UsuarioModificacionId = @UsuarioModificacionId,
						FechaModificacion = GETDATE(),
						EstadoActivo = 0
						where idTipoCliente = @IdTipoCliente
				  if @ErrorCode <> 0 goto onError
			  end
		commit tran
	end
	

	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END

ALTER PROCEDURE [dbo].[ActualizarTipoCliente](
	@IdTipoCliente				int,
	@Descripcion				varchar(50),
	@UsuarioModificacionId		int,
	@EstadoActivo				int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;

	begin
		begin tran
			  begin
					
					update TipoCliente
					set 
						Descripcion = @Descripcion,
						UsuarioModificacionId = @UsuarioModificacionId,
						FechaModificacion = GETDATE(),
						EstadoActivo = @EstadoActivo
					where IdTipoCliente = @IdTipoCliente

					select @ErrorCode = @@ERROR 
					if @ErrorCode <> 0 goto onError
			 end
		commit tran
	end

	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END


ALTER PROCEDURE [dbo].[ActualizarCliente](
	@IdCliente				int,
	-- @TipoClienteId			int,
	@RazonSocial			varchar(255),
	@Documento				varchar(13),
	@Descripcion			varchar(50),
	@MetaEntidad			money,
	@MetaEmpresa			money,
	@Correo					varchar(50),
	@NumeroContacto			varchar(12),
	@UsuarioModificacionId	int,
	@IdEstadoActivo			int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;

	begin
		begin tran
			  begin
					update Cliente
					set 
						-- TipoClienteId = @TipoClienteId,
						RazonSocial = @RazonSocial,
						Documento = @Documento,
						Descripcion = @Descripcion,
						MetaEntidad = @MetaEntidad,
						MetaEmpresa = @MetaEmpresa,
						Correo = @Correo,
						NumeroContacto = @NumeroContacto,
						UsuarioModificacionId = @UsuarioModificacionId,
						FechaModificacion = GETDATE(),
						EstadoActivo = @IdEstadoActivo
					where IdCliente = @IdCliente

					select @ErrorCode = @@ERROR 
					if @ErrorCode <> 0 goto onError
			 end
		commit tran
	end

	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END


ALTER PROCEDURE [dbo].[CrearParametro](
	@TipoParametro				varchar(20),
	@Descripcion				varchar(50),
	@ValorParametro				float,
	@UsuarioCreacionId			int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;

	begin
		begin tran

			-- if exists(select idGrupoIngreso from GrupoIngreso where Descripcion=@Descripcion)
			 --  begin
			--	  RAISERROR ('Ya se encuentra un GrupoIngreso registrado con éste Nombre', 11, 1)
			 --  end
			--else
			  begin
				  
				  insert into Parametro(TipoParametro,Descripcion,ValorParametro,UsuarioCreacionId,FechaCreacion,EstadoActivo)
				  values (@TipoParametro,@Descripcion,@ValorParametro,@UsuarioCreacionId,GETDATE(),1)
			
				  select @ErrorCode = @@ERROR 
				  if @ErrorCode <> 0 goto onError
			  end
		commit tran
	end
	
	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END

USE [BDFinanciero]
GO
/****** Object:  StoredProcedure [dbo].[CrearParametro]    Script Date: 22/09/2020 20:57:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[CrearParametro](
	@TipoParametro				varchar(20),
	@Descripcion				varchar(50),
	@ValorParametro				float,
	@UsuarioCreacionId			int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;

	begin
		begin tran
			  begin
				  
				  insert into Parametro(TipoParametro,Descripcion,ValorParametro,UsuarioCreacionId,FechaCreacion,EstadoActivo)
				  values (@TipoParametro,@Descripcion,@ValorParametro,@UsuarioCreacionId,GETDATE(),1)
			
				  select @ErrorCode = @@ERROR 
				  if @ErrorCode <> 0 goto onError
			  end
		commit tran
	end
	
	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END

USE [BDFinanciero]
GO
/****** Object:  StoredProcedure [dbo].[ActualizarParametro]    Script Date: 22/09/2020 21:39:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[ActualizarParametro](
	@IdParametro				int,
	-- @TipoParametro				varchar(20),
	@Descripcion				varchar(50),
	@ValorParametro				float,
	@UsuarioModificacionId		int,
	@EstadoActivo				int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;

	begin
		begin tran
			if exists(select TipoParametro from Parametro where Descripcion=@Descripcion and idParametro != @IdParametro)
			  begin
				   RAISERROR ('Ya se encuentra un area registrada con éste Nombre', 11, 1)
			  end
			else
			  begin
					
					update Parametro
					set 
						-- TipoParametro = @TipoParametro,
						Descripcion = @Descripcion,
						ValorParametro = @ValorParametro,
						UsuarioModificacionId = @UsuarioModificacionId,
						EstadoActivo = @EstadoActivo
					where idParametro = @IdParametro

					select @ErrorCode = @@ERROR 
					if @ErrorCode <> 0 goto onError
			 end
		commit tran
	end

	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END

ALTER PROCEDURE [dbo].[ActualizarCliente](
	@IdCliente				int,
	@TipoClienteId			int,
	@RazonSocial			varchar(255),
	@Documento				varchar(13),
	@Descripcion			varchar(50),
	@MetaEntidad			money,
	@MetaEmpresa			money,
	@Correo					varchar(50),
	@NumeroContacto			varchar(12),
	@UsuarioModificacionId	int,
	@IdEstadoActivo			int
	)
AS
BEGIN
	DECLARE @ErrorCode as int
	SET NOCOUNT ON;

	begin
		begin tran
			  begin
					update Cliente
					set 
						TipoClienteId = @TipoClienteId,
						RazonSocial = @RazonSocial,
						Documento = @Documento,
						Descripcion = @Descripcion,
						MetaEntidad = @MetaEntidad,
						MetaEmpresa = @MetaEmpresa,
						Correo = @Correo,
						NumeroContacto = @NumeroContacto,
						UsuarioModificacionId = @UsuarioModificacionId,
						FechaModificacion = GETDATE(),
						EstadoActivo = @IdEstadoActivo
					where IdCliente = @IdCliente

					select @ErrorCode = @@ERROR 
					if @ErrorCode <> 0 goto onError
			 end
		commit tran
	end

	onError:
	if @ErrorCode <> 0
	begin
		print 'Error ' + @ErrorCode + '. No se pudo completar la operación'
		rollback tran 
	end
	
END